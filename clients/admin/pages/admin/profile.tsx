import { Input, Text } from "@invenio/core";
import dayjs from "dayjs";
import type { NextPage } from "next";
import Head from "next/head";
import { useDispatch } from "react-redux";
import styled from "styled-components";
import {
  getAuthUser,
  setAuthenticationUserInputs,
} from "../../redux/slices/authentication";
import { getSystemTheme } from "../../redux/slices/system";
import { Icon } from "../../src/atoms/icon";
import { useUpdateUserData } from "../../src/hooks/user/useUpdateUserData";
import { DropUser } from "../../src/organisms/menu/dropUser";
import { SignOut } from "../../src/organisms/menu/signOut";
import { ThemeSwitch } from "../../src/organisms/menu/themeSwitch";
import { capitalize } from "../../src/utils/functions";
import { device } from "../../styles/mediaQueries/mediaQueries";

const UserData = styled.ul`
  display: flex;
  align-items: flex-start;
  justify-content: center;
  flex-direction: column;
  width: 100%;
  padding: 0;
  margin: 0;
  margin-bottom: ${({ theme }) =>
    `${theme.spacings.lg}${theme.units.spacings}`};
  @media ${device.tablet} {
    max-width: 20vw;
  }
`;

const UserSettings = styled(UserData)``;

const UserDataLi = styled.li`
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  :not(:last-of-type) {
    margin-bottom: ${({ theme }) =>
      `${theme.spacings.md}${theme.units.spacings}`};
  }
`;

const UserSettingsLi = styled(UserDataLi)``;

const Icn = styled(Icon)`
  margin-right: ${({ theme }) => `${theme.spacings.sm}${theme.units.spacings}`};
`;

const Profile: NextPage = () => {
  const dispatch = useDispatch();
  const theme = getSystemTheme() || "";
  const { firstName, surName, email, createdAt } = getAuthUser() || {};
  useUpdateUserData();
  return (
    <>
      <Head>
        <title>Invenio admin - profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <UserData as="ul">
        <UserDataLi>
          <Text textVariant="h3" fontSize="lg">
            Your information
          </Text>
        </UserDataLi>
        <UserDataLi>
          <Input
            label="Firstname"
            defaultValue={firstName}
            placeholder="First name"
            onBlur={({ target }) =>
              dispatch(
                setAuthenticationUserInputs({
                  id: "firstName",
                  value: target.value,
                })
              )
            }
          />
        </UserDataLi>
        <UserDataLi>
          <Input
            label="Surname"
            defaultValue={surName}
            placeholder="Surname"
            onBlur={({ target }) =>
              dispatch(
                setAuthenticationUserInputs({
                  id: "surName",
                  value: target.value,
                })
              )
            }
          />
        </UserDataLi>
        <UserDataLi>
          <>
            <Icn variant="accent" icon="envelope" />
            {email && <Text fontSize="md">{email}</Text>}
          </>
        </UserDataLi>
        <UserDataLi>
          <>
            <Icn variant="accent" icon="calendar-day" />
            {createdAt && (
              <Text fontSize="md">
                {dayjs(createdAt).format("dddd, MMMM D, YYYY")}
              </Text>
            )}
          </>
        </UserDataLi>
      </UserData>
      <UserSettings>
        <UserSettingsLi>
          <Text textVariant="h3" fontSize="lg">
            Settings
          </Text>
        </UserSettingsLi>
        <UserSettingsLi>
          <ThemeSwitch
            label={`${capitalize(theme)} mode is on`}
            direction="row"
            fontSize="md"
          />
        </UserSettingsLi>
      </UserSettings>
      <UserSettings>
        <UserSettingsLi>
          <Text textVariant="h3" fontSize="lg">
            Authentication
          </Text>
        </UserSettingsLi>
        <UserSettingsLi>
          <SignOut
            direction="row"
            fontSize="md"
            label={`Sign out: ${firstName} ${surName}`}
          />
        </UserSettingsLi>
        <UserSettingsLi>
          <DropUser
            direction="row"
            fontSize="md"
            label={`Remove account: ${email}`}
          />
        </UserSettingsLi>
      </UserSettings>
    </>
  );
};

export default Profile;
